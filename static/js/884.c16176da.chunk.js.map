{"version":3,"file":"static/js/884.c16176da.chunk.js","mappings":"qNAyFA,UApFqB,WAAO,IAAD,QACzB,GAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAAIM,KAAKP,EACvB,GAAE,CAACC,IAEc,OAAdF,EAAJ,CAIA,IACES,EAMET,EANFS,YACAC,EAKEV,EALFU,eACAC,EAIEX,EAJFW,aACAC,EAGEZ,EAHFY,SACAC,EAEEb,EAFFa,aAIIC,EAFFd,EADFe,OAGuBC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,MAEjDC,EAAmBP,EAAaQ,MAAM,IAAIC,MAAM,EAAG,GAAGH,KAAK,IAI/D,MAHqB,KAAjBN,IACFO,EAAgB,YAGhB,UAAC,IAAD,CAAKG,GAAG,OAAOC,GAAI,EAAGC,GAAI,EAA1B,WACE,SAAC,KAAD,CACEC,GACEtB,EAASuB,SAASC,SAAS,UAA3B,UACOxB,EAASyB,MAAMC,KAAKH,UAD3B,OACsCvB,EAASyB,MAAMC,KAAKC,QACtD,QAJR,mBASA,UAAC,IAAD,CAAKC,QAAQ,OAAOC,QAAQ,OAAOC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAApD,WACE,gBACEC,IAAG,0CAAqC5B,GACxC6B,IAAG,UAAK5B,GACR6B,OAAQ,OAEV,UAAC,IAAD,YACE,UAAC,IAAD,CAAKhB,GAAG,KAAKY,GAAI,EAAjB,UACGzB,EADH,IACoBU,MAEpB,UAAC,IAAD,CAAKG,GAAG,IAAIY,GAAI,EAAhB,0BACc,4BAAOK,KAAKC,MAAqB,GAAf9B,GAAlB,WAEd,SAAC,IAAD,CAAKY,GAAG,KAAKY,GAAI,EAAjB,uBAGA,SAAC,IAAD,CAAKZ,GAAG,IAAIY,GAAI,EAAhB,SACGvB,KAEH,SAAC,IAAD,CAAKW,GAAG,IAAIY,GAAI,EAAhB,qBAGA,uBAAIrB,WAIR,mDACA,UAAC,IAAD,CAAKS,GAAG,KAAKa,EAAG,EAAGM,EAAG,EAAGR,GAAI,EAA7B,WACE,yBACE,SAAC,KAAD,CAAMR,GAAG,OAAOG,MAAO,CAAEC,KAAI,oBAAE1B,EAASyB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAvD,qBAIF,yBACE,SAAC,KAAD,CAAMJ,GAAG,UAAUG,MAAO,CAAEC,KAAI,oBAAE1B,EAASyB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA1D,2BAKJ,SAAC,KAAD,MAnEH,CAsEF,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { Box } from 'components/Box';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/movieAPI';\n\nconst MovieDetails = () => {\n  const [movieInfo, setmovieInfo] = useState(null);\n\n  const { id } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieInfo(id).then(setmovieInfo);\n  }, [id]);\n\n  if (movieInfo === null) {\n    return;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    release_date,\n    genres,\n  } = movieInfo;\n\n  const genreList = genres.map(item => item.name).join(', ');\n\n  let movieReleaseDate = release_date.split('').slice(0, 4).join('');\n  if (release_date === '') {\n    movieReleaseDate = `Unknown`;\n  }\n  return (\n    <Box as=\"main\" pl={3} pt={0}>\n      <Link\n        to={\n          location.pathname.includes('movies')\n            ? `${location.state.from.pathname}${location.state.from.search}`\n            : '/home'\n        }\n      >\n        Back\n      </Link>\n      <Box display=\"flex\" gridGap=\"20px\" mt={3} mb={3} p={0}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={`${original_title}`}\n          height={600}\n        />\n        <Box>\n          <Box as=\"h2\" mb={3}>\n            {original_title} {movieReleaseDate}\n          </Box>\n          <Box as=\"p\" mb={3}>\n            User score: <span>{Math.round(vote_average * 10)}%</span>\n          </Box>\n          <Box as=\"h3\" mb={3}>\n            Overview\n          </Box>\n          <Box as=\"p\" mb={3}>\n            {overview}\n          </Box>\n          <Box as=\"p\" mb={3}>\n            Genres\n          </Box>\n          <p>{genreList}</p>\n        </Box>\n      </Box>\n\n      <p>Additional information</p>\n      <Box as=\"ul\" p={0} m={0} mt={3}>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state?.from ?? '' }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state?.from ?? '' }}>\n            Reviews\n          </Link>\n        </li>\n      </Box>\n      <Outlet />\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movieInfo","setmovieInfo","id","useParams","location","useLocation","useEffect","getMovieInfo","then","poster_path","original_title","vote_average","overview","release_date","genreList","genres","map","item","name","join","movieReleaseDate","split","slice","as","pl","pt","to","pathname","includes","state","from","search","display","gridGap","mt","mb","p","src","alt","height","Math","round","m"],"sourceRoot":""}